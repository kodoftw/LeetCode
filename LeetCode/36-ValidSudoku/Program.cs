using Xunit;

namespace _36_ValidSudoku
{
    class Program
    {
        static void Main(string[] args)
        {
            var solution = new Solution();

            Assert.True(solution.IsValidSudoku(new[] {
                new[] {'5','3','.','.','7','.','.','.','.'},
                new[] {'6','.','.','1','9','5','.','.','.'},
                new[] {'.','9','8','.','.','.','.','6','.'},
                new[] {'8','.','.','.','6','.','.','.','3'},
                new[] {'4','.','.','8','.','3','.','.','1'},
                new[] {'7','.','.','.','2','.','.','.','6'},
                new[] {'.','6','.','.','.','.','2','8','.'},
                new[] {'.','.','.','4','1','9','.','.','5'},
                new[] {'.','.','.','.','8','.','.','7','9'}
            }));

            Assert.False(solution.IsValidSudoku(new[] {
                new[] {'8','3','.','.','7','.','.','.','.'},
                new[] {'6','.','.','1','9','5','.','.','.'},
                new[] {'.','9','8','.','.','.','.','6','.'},
                new[] {'8','.','.','.','6','.','.','.','3'},
                new[] {'4','.','.','8','.','3','.','.','1'},
                new[] {'7','.','.','.','2','.','.','.','6'},
                new[] {'.','6','.','.','.','.','2','8','.'},
                new[] {'.','.','.','4','1','9','.','.','5'},
                new[] {'.','.','.','.','8','.','.','7','9'}
            }));
        }
    }
}
